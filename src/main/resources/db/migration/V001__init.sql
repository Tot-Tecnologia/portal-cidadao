-- Tabela pessoas
CREATE TABLE pessoas (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    nome VARCHAR(100) NOT NULL,
    documento VARCHAR(255) UNIQUE,
    tipo_pessoa VARCHAR(31) NOT NULL,
    contato_email VARCHAR(100) NOT NULL,
    contato_telefone VARCHAR(11) NOT NULL,
    criado_em TIMESTAMP(6),
    atualizado_em TIMESTAMP(6),
    CONSTRAINT pk_pessoas PRIMARY KEY (id),
    CONSTRAINT uk_pessoas_contato_email UNIQUE (contato_email),
    CONSTRAINT uk_pessoas_documento UNIQUE (documento)
);

-- Tabela usuarios
CREATE TABLE usuarios (
    id BIGINT NOT NULL,
    login VARCHAR(255) NOT NULL,
    senha VARCHAR(255) NOT NULL,
    CONSTRAINT pk_usuarios PRIMARY KEY (id),
    CONSTRAINT fk_usuarios_pessoa_id FOREIGN KEY (id) REFERENCES pessoas(id)
);

-- Tabela cidadaos
CREATE TABLE cidadaos (
    id BIGINT NOT NULL,
    CONSTRAINT pk_cidadaos PRIMARY KEY (id),
    CONSTRAINT fk_cidadaos_usuario_id FOREIGN KEY (id) REFERENCES usuarios(id)
);

-- Tabela protocolos
CREATE TABLE protocolos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    numero_protocolo VARCHAR(255) NOT NULL,
    cpf_cnpj VARCHAR(14) NOT NULL,
    nome_solicitante VARCHAR(100) NOT NULL,
    tipo_documento BIGINT NOT NULL,
    descricao TEXT,
    protocolo_status VARCHAR(255) NOT NULL,
    pessoa_id BIGINT NOT NULL,

    -- Endereço
    endereco_logradouro VARCHAR(100) NOT NULL,
    endereco_numero VARCHAR(10) NOT NULL,
    endereco_complemento VARCHAR(50),
    endereco_bairro VARCHAR(50) NOT NULL,
    endereco_cidade VARCHAR(50) NOT NULL,
    endereco_estado VARCHAR(2) NOT NULL,
    endereco_cep VARCHAR(9) NOT NULL,

    -- Contato
    contato_email VARCHAR(100) NOT NULL,
    contato_telefone VARCHAR(11) NOT NULL,

    criado_em TIMESTAMP(6),
    atualizado_em TIMESTAMP(6),

    CONSTRAINT pk_protocolos PRIMARY KEY (id),
    CONSTRAINT uk_protocolos_numero_protocolo UNIQUE (numero_protocolo),
    CONSTRAINT fk_protocolos_pessoa_id FOREIGN KEY (pessoa_id) REFERENCES pessoas(id),
    CONSTRAINT chk_protocolos_status CHECK (protocolo_status IN ('ABERTO','EM_ANALISE','APROVADO','REJEITADO'))
);

-- Índice separado para busca por número de protocolo
CREATE INDEX idx_protocolos_numero_protocolo ON protocolos (numero_protocolo);

-- Tabela arquivos (superclasse)
CREATE TABLE arquivos (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    protocolo_id BIGINT,
    nome_original VARCHAR(100) NOT NULL,
    mime_type VARCHAR(100) NOT NULL,
    conteudo BYTEA NOT NULL,
    tamanho BIGINT NOT NULL,
    tipo_arquivo VARCHAR(31) NOT NULL,
    criado_em TIMESTAMP(6),
    atualizado_em TIMESTAMP(6),

    CONSTRAINT pk_arquivos PRIMARY KEY (id),
    CONSTRAINT fk_arquivos_protocolo_id FOREIGN KEY (protocolo_id) REFERENCES protocolos(id)
);

-- Tabela documentos (herda de arquivos)
CREATE TABLE documentos (
    id BIGINT NOT NULL,
    CONSTRAINT pk_documentos PRIMARY KEY (id),
    CONSTRAINT fk_documentos_arquivo_id FOREIGN KEY (id) REFERENCES arquivos(id)
);

-- Tabela guias (herda de arquivos)
CREATE TABLE guias (
    id BIGINT NOT NULL,
    data_pagamento TIMESTAMP(6),
    status VARCHAR(255) NOT NULL,

    CONSTRAINT pk_guias PRIMARY KEY (id),
    CONSTRAINT fk_guias_arquivo_id FOREIGN KEY (id) REFERENCES arquivos(id),
    CONSTRAINT chk_guias_status CHECK (status IN ('PENDENTE', 'PAGA'))
);
